RELEVANCE QUESTIONS: 1.	Reuse and encapsulation (everything we need to do with a racer 
like reading one, comparing  one to another is encapsulated inside the Racer class) 
are a big part of object oriented programming. After writing correct code for Racer class 
(and, optionally, Sensor and TimeStamp classes), how easy was it to write the remaining code? 
If you didn’t create a Sensor and/or TimeStamp class, did you find yourself wishing you had – why or why not?
ANSWER: I worte the sensor and timesptamp classes and i think it was a good choice because it made the rest of the code easier and more organized instead of putting everything 
in the racer.cpp 
2.	Besides reading/writing a Racer object to/from a text file and comparing two Racer objects with the < operator, what other behaviors/operations have 
we defined or could we define to operate on racers? List at least two.
ANSWER: operator - to see how fast they go from one sensor to another by taking the difference of the timestamps.
